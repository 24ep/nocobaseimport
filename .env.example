# Database Configuration (for connecting to the target NocoBase instance)
# These are now managed via the UI and stored in the importer_db.
# The application itself connects to its own database (importer_db) using
# variables defined in docker-compose.yml and sourced from IMPORTER_DB_* below.
# DB_HOST=your_db_host
# DB_PORT=18088
# DB_NAME=nocobase
# DB_USER=nocobase
# DB_PASSWORD=nocobase_password_change_me

# Flask Application Configuration
FLASK_SECRET_KEY=a_very_strong_secret_key_please_change_me
FLASK_UPLOAD_FOLDER=uploads/
FLASK_SESSION_COOKIE_SECURE=True # Set to True if app is served over HTTPS
# INFO: Maximum file upload size is configured in app.py (currently 16MB)
# FLASK_DEBUG=True # Uncomment for development debugging

# Flask Application Discovery & CLI Configuration
# FLASK_APP is crucial for 'flask' CLI commands (like 'flask run', 'flask rq') to find your application.
# It's used by the worker service in docker-compose.yml and when running workers manually.
# The Dockerfile also sets a default, but this ensures it's explicit if using an .env file with Docker Compose.
FLASK_APP=flask_nocobase_importer.app
# FLASK_RUN_HOST is used if running 'flask run' directly. Gunicorn in Dockerfile uses its own bind.
# FLASK_RUN_HOST=0.0.0.0 
FLASK_RUN_PORT=5000 # Port for 'flask run', Gunicorn uses its own port config.

# Redis Configuration (for RQ task queue)
REDIS_URL=redis://localhost:6379/0

# -----------------------------------------------------------------------------
# MinIO Configuration (for backing up original uploaded files)
# -----------------------------------------------------------------------------
# MinIO server endpoint (e.g., localhost:9000 or minio.example.com)
MINIO_ENDPOINT=localhost:9000
# MinIO access key
MINIO_ACCESS_KEY=minioadmin
# MinIO secret key
MINIO_SECRET_KEY=minioadmin
# MinIO bucket name for backups (will be created if it doesn't exist)
MINIO_BUCKET_NAME=nocobase-backups
# Set to 'True' if MinIO is using HTTPS, 'False' or leave unset for HTTP
MINIO_SECURE=False

# -----------------------------------------------------------------------------
# Importer Application Database (PostgreSQL - for storing NocoBase profiles)
# These variables are used by the 'importer_db' service in docker-compose.yml
# and also by the Flask application (web/worker) to connect to it.
# The DB_HOST and DB_PORT for the application are set to 'importer_db' and '5432'
# respectively, directly in the docker-compose.yml.
# -----------------------------------------------------------------------------
IMPORTER_DB_NAME=importer_app_data
IMPORTER_DB_USER=importer_user
IMPORTER_DB_PASSWORD=importer_secret_password_please_change_me

# -----------------------------------------------------------------------------
# Optional Sample Target NocoBase Database (PostgreSQL - for testing imports)
# These variables are used by the 'sample_nocobase_db' service in docker-compose.yml.
# To use this, create a NocoBase Profile in the UI pointing to:
# Host: sample_nocobase_db, Port: 5432 (internal Docker port)
# DB Name, User, Password: as defined below.
# This DB service will be empty initially; NocoBase schema setup is not included.
# -----------------------------------------------------------------------------
SAMPLE_NOCOBASE_DB_NAME=sample_nocobase_data
SAMPLE_NOCOBASE_DB_USER=sample_user
SAMPLE_NOCOBASE_DB_PASSWORD=sample_secret_password_please_change_me
